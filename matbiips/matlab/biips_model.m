function [p, data] = biips_model(filename, data, varargin)
% BIIPS_MODEL instantiate a stochastic model under a DAG form 
% function [p, data] = biips_model(filename, data, [sample_data, seed, quiet])
%  INPUT: 
%  - filename: name of the BUGS file which describes the stochastic model
%  - data: either a struct containing constants and observed values
%           or a cell of strings containing the names of the variables whose
%           value will be looked for in the workspace
%  - sample_data: boolean to choose if data is generated by the 'data'
%                 block of the BUGS model. default is 'true'
%  - seed: seed of the random number generator used to sample the data
%               if 'sample_data' is true. default is random.
%  - quiet: boolean to deactivate verbosity. default is 'false'
%  OUTPUT:
%  - p: integer which is an index of the compiled model object in the
%  internal table of models.
%  - data: structure containing the data. useful if 'sample_data' is true

% check for optional options
opt_argin = length(varargin);
% defauts values
sample_data = true; 
if (check_octave_old)
   s=rand('state');
   rand('state',sum(100*clock)); 
   seed=double(randi(intmax));
   rand('state',s);
else
   s=rng('shuffle');
   seed=randi(intmax);
   rng(s);
end
quiet = false;

if opt_argin >= 1
   sample_data = varargin{1};
end
if opt_argin >=2 
   seed = varargin{2};
end   

if opt_argin >=3
    quiet = varargin{3};
end    

% processing data argument
if (isa(data, 'cell'))
    data = reshape(data, length(data), 1);
    
    isch = cellfun(@(x) ischar(x), data);
    ignored_var = data(~isch);
    if (~isempty(ignored_var))
        warning('ignored non character elements in ''data'' cell argument.');
    end
    data = data(isch);
    
    isnum = cellfun(@(x) isnumeric(evalin('base', x)), data, 'ErrorHandler', @(S, varargin) false);
    ignored_var = data(~isnum);
    if (~isempty(ignored_var))
        varnames = sprintf('%s ',ignored_var{:});
        warning('ignored the following (either non numeric or non existent) variables given in ''data'' cell argument: %s ', varnames);
    end
    
    data = data(isnum);
    
    data = cell2struct(cellfun(@(x) evalin('base',x), data, 'UniformOutput', false), data, 1);
end

p = inter_biips('make_console');
if (quiet)
  old_verb = inter_biips('verbosity', 0);
end

% load model and do some checks
inter_biips('check_model', p, filename);
inter_biips('compile_model', p, data, sample_data, seed);
data = inter_biips('get_data', p);

if (quiet)
  inter_biips('verbosity', old_verb);
end
