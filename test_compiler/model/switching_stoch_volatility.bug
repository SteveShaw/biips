# Switching Stochastic volatility model
# with student t innovations
# see e.g.
# Carvalho and Lopes. Simulation based sequential analysis of Markov switching volatility models. Computational statistics and Data analysis, 51 (2007).

var x.true[t.max], class.true[t.max], mu.true[t.max], vect.true[t.max, 2],
    x[t.max], y[t.max], class[t.max], mu[t.max]

data
{
  x.true[1] ~ dnorm(mean.x.init, prec.x.init)
  class.true[1] <- class.init + 0
  for (t in 2:t.max)
  { 
     #vect.true[t,] <- (class.true[t-1]==1)*pi[1,] + (class.true[t-1]==2)*pi[2,]
     #class.true[t] ~ dcat(vect.true[t,])
    class.true[t] ~ dcat(ifelse(class.true[t-1]==1,pi[1,1:2],pi[2,1:2]))
    mu.true[t] <- (class.true[t]==1) * alpha[1] + (class.true[t]==2) * alpha[2] + beta*x.true[t-1]
    x.true[t] ~ dnorm(mu.true[t], prec.x)    
    y[t] ~ dt(0, exp(-x.true[t]), nu)    
  }
}

model
{
  x[1] ~ dnorm(mean.x.init, prec.x.init)
  class[1] <- class.init + 0
  for (t in 2:t.max)
  { 
    # vect.true[t,] <- (class.true[t-1]==1)*pi[1,] + (class.true[t-1]==2)*pi[2,]
    # class.true[t] ~ dcat(vect.true[,t])
    class[t] ~ dcat(ifelse(class[t-1]==1,pi[1,1:2],pi[2,1:2]))
    mu[t] <- (class[t]==1) * alpha[1] + (class[t]==2) * alpha[2] + beta*x[t-1]
    x[t] ~ dnorm(mu[t], prec.x)    
    y[t] ~ dt(0, exp(-x[t]), nu)    
  }
}
